{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FilterProductsPipe {\n  transform(products, search) {\n    if (search.length === 0) return products;\n    return products.filter(p => p.title.toLowerCase().includes(search.toLowerCase()));\n  }\n  static #_ = this.ɵfac = function FilterProductsPipe_Factory(t) {\n    return new (t || FilterProductsPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filterProducts\",\n    type: FilterProductsPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["FilterProductsPipe","transform","products","search","length","filter","p","title","toLowerCase","includes","_","_2","pure"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/pipes/filter-products.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { IEvent } from '../models/event';\n\n@Pipe({\n  name: 'filterProducts'\n})\nexport class FilterProductsPipe implements PipeTransform {\n\n  transform(products: IEvent[], search: string): IProduct[] {\n    if (search.length === 0) return products\n    return products.filter(p => p.title.toLowerCase().includes(search.toLowerCase()))\n  }\n\n}\n"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAE7BC,SAASA,CAACC,QAAkB,EAAEC,MAAc;IAC1C,IAAIA,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOF,QAAQ;IACxC,OAAOA,QAAQ,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,EAAE,CAAC,CAAC;EACnF;EAAC,QAAAE,CAAA,G;qBALUV,kBAAkB;EAAA;EAAA,QAAAW,EAAA,G;;UAAlBX,kBAAkB;IAAAY,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}