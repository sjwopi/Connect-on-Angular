{"ast":null,"code":"import { delay, retry, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventsService {\n  constructor(http) {\n    this.http = http;\n    this.events = [];\n  }\n  getAll() {\n    console.log(\"e\");\n    return this.http.get('http://localhost:3003/events').pipe(delay(200), retry(2), tap(events => {\n      this.events = events;\n      console.log(events);\n    }));\n  }\n  create(event) {\n    return this.http.post('http://localhost:3003/events', event).pipe(tap(prod => this.events.push(prod)));\n  }\n  static #_ = this.ɵfac = function EventsService_Factory(t) {\n    return new (t || EventsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventsService,\n    factory: EventsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["delay","retry","tap","EventsService","constructor","http","events","getAll","console","log","get","pipe","create","event","post","prod","push","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/services/events.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\nimport {HttpClient, HttpErrorResponse, HttpParams} from '@angular/common/http'\nimport {catchError, delay, Observable, retry, tap, throwError} from 'rxjs'\nimport {IEvent} from '../models/event'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  events: IEvent[] = []\n\n  getAll(): Observable<IEvent[]> {\n    console.log(\"e\")\n    return this.http.get<IEvent[]>('http://localhost:3003/events').pipe(\n      delay(200),\n      retry(2),\n      tap(events => {this.events = events; console.log(events)})\n    )\n  }\n\n  create(event: IEvent): Observable<IEvent> {\n    return this.http.post<IEvent>('http://localhost:3003/events', event)\n      .pipe(\n        tap(prod => this.events.push(prod))\n      )\n  }\n}\n"],"mappings":"AAEA,SAAoBA,KAAK,EAAcC,KAAK,EAAEC,GAAG,QAAmB,MAAM;;;AAM1E,OAAM,MAAOC,aAAa;EACxBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAId,KAAAC,MAAM,GAAa,EAAE;EAFrB;EAIAC,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAW,8BAA8B,CAAC,CAACC,IAAI,CACjEX,KAAK,CAAC,GAAG,CAAC,EACVC,KAAK,CAAC,CAAC,CAAC,EACRC,GAAG,CAACI,MAAM,IAAG;MAAE,IAAI,CAACA,MAAM,GAAGA,MAAM;MAAEE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IAAA,CAAC,CAAC,CAC3D;EACH;EAEAM,MAAMA,CAACC,KAAa;IAClB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAS,8BAA8B,EAAED,KAAK,CAAC,CACjEF,IAAI,CACHT,GAAG,CAACa,IAAI,IAAI,IAAI,CAACT,MAAM,CAACU,IAAI,CAACD,IAAI,CAAC,CAAC,CACpC;EACL;EAAC,QAAAE,CAAA,G;qBAtBUd,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbnB,aAAa;IAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}