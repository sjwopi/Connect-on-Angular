{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class eventsService {\n  constructor(http) {\n    this.http = http;\n    this.events = [];\n  }\n  getAll() {\n    return this.http.get('http://localhost:3003/events', {\n      params: new HttpParams({\n        fromObject: {\n          limit: 5\n        }\n      })\n    }).pipe(delay(200), retry(2), tap(events => this.events = events), catchError(this.errorHandler.bind(this)));\n  }\n  static #_ = this.ɵfac = function eventsService_Factory(t) {\n    return new (t || eventsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: eventsService,\n    factory: eventsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["eventsService","constructor","http","events","getAll","get","params","HttpParams","fromObject","limit","pipe","delay","retry","tap","catchError","errorHandler","bind","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/services/events.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class eventsService {\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  events: IProduct[] = []\n\n  getAll(): Observable<IProduct[]> {\n    return this.http.get<IProduct[]>('http://localhost:3003/events', {\n      params: new HttpParams({\n        fromObject: {limit: 5}\n      })\n    }).pipe(\n      delay(200),\n      retry(2),\n      tap(events => this.events = events),\n      catchError(this.errorHandler.bind(this))\n    )\n  }\n\n  /* create(product: IProduct): Observable<IProduct> {\n    return this.http.post<IProduct>('http://localhost:3003/events', product)\n      .pipe(\n        tap(prod => this.events.push(prod))\n      )\n  }\n\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message)\n    return throwError(() => error.message)\n  } */\n}"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EACxBC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAId,KAAAC,MAAM,GAAe,EAAE;EAFvB;EAIAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,8BAA8B,EAAE;MAC/DC,MAAM,EAAE,IAAIC,UAAU,CAAC;QACrBC,UAAU,EAAE;UAACC,KAAK,EAAE;QAAC;OACtB;KACF,CAAC,CAACC,IAAI,CACLC,KAAK,CAAC,GAAG,CAAC,EACVC,KAAK,CAAC,CAAC,CAAC,EACRC,GAAG,CAACV,MAAM,IAAI,IAAI,CAACA,MAAM,GAAGA,MAAM,CAAC,EACnCW,UAAU,CAAC,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACH;EAAC,QAAAC,CAAA,G;qBAnBUjB,aAAa,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbtB,aAAa;IAAAuB,OAAA,EAAbvB,aAAa,CAAAwB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}