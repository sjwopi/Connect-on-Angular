{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class FocusDirective {\n  constructor(el) {\n    this.el = el;\n  }\n  ngAfterViewInit() {\n    // this.el.nativeElement.focus()\n  }\n  ngOnInit() {\n    this.el.nativeElement.focus();\n  }\n  static #_ = this.ɵfac = function FocusDirective_Factory(t) {\n    return new (t || FocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: FocusDirective,\n    selectors: [[\"\", \"appFocus\", \"\"]]\n  });\n}","map":{"version":3,"names":["FocusDirective","constructor","el","ngAfterViewInit","ngOnInit","nativeElement","focus","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/directives/focus.directive.ts"],"sourcesContent":["import {AfterViewInit, Directive, ElementRef, OnInit} from '@angular/core'\n\n@Directive({\n  selector: '[appFocus]'\n})\nexport class FocusDirective implements OnInit, AfterViewInit{\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngAfterViewInit(): void {\n    // this.el.nativeElement.focus()\n  }\n\n  ngOnInit(): void {\n    this.el.nativeElement.focus()\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,EAAc;IAAd,KAAAA,EAAE,GAAFA,EAAE;EACtB;EAEAC,eAAeA,CAAA;IACb;EAAA;EAGFC,QAAQA,CAAA;IACN,IAAI,CAACF,EAAE,CAACG,aAAa,CAACC,KAAK,EAAE;EAC/B;EAAC,QAAAC,CAAA,G;qBAXUP,cAAc,EAAAQ,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdX,cAAc;IAAAY,SAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}