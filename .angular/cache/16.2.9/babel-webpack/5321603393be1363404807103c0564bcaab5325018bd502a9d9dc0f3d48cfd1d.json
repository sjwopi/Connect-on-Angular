{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { catchError, delay, retry, tap, throwError } from 'rxjs';\nexport let ProductsService = class ProductsService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.products = [];\n  }\n  getAll() {\n    return this.http.get('https://fakestoreapi.com/products', {\n      params: new HttpParams({\n        fromObject: {\n          limit: 5\n        }\n      })\n    }).pipe(delay(200), retry(2), tap(products => this.products = products), catchError(this.errorHandler.bind(this)));\n  }\n  create(product) {\n    return this.http.post('https://fakestoreapi.com/products', product).pipe(tap(prod => this.products.push(prod)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n};\nProductsService = __decorate([Injectable({\n  providedIn: 'root'\n})], ProductsService);","map":{"version":3,"names":["Injectable","HttpParams","catchError","delay","retry","tap","throwError","ProductsService","constructor","http","errorService","products","getAll","get","params","fromObject","limit","pipe","errorHandler","bind","create","product","post","prod","push","error","handle","message","__decorate","providedIn"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/services/events.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\nimport {HttpClient, HttpErrorResponse, HttpParams} from '@angular/common/http'\nimport {catchError, delay, Observable, retry, tap, throwError} from 'rxjs'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  constructor(\n    private http: HttpClient,\n    private errorService: ErrorService\n  ) {\n  }\n\n  products: IProduct[] = []\n\n  getAll(): Observable<IProduct[]> {\n    return this.http.get<IProduct[]>('https://fakestoreapi.com/products', {\n      params: new HttpParams({\n        fromObject: {limit: 5}\n      })\n    }).pipe(\n      delay(200),\n      retry(2),\n      tap(products => this.products = products),\n      catchError(this.errorHandler.bind(this))\n    )\n  }\n\n  create(product: IProduct): Observable<IProduct> {\n    return this.http.post<IProduct>('https://fakestoreapi.com/products', product)\n      .pipe(\n        tap(prod => this.products.push(prod))\n      )\n  }\n\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message)\n    return throwError(() => error.message)\n  }\n}"],"mappings":";AAAA,SAAQA,UAAU,QAAO,eAAe;AACxC,SAAuCC,UAAU,QAAO,sBAAsB;AAC9E,SAAQC,UAAU,EAAEC,KAAK,EAAcC,KAAK,EAAEC,GAAG,EAAEC,UAAU,QAAO,MAAM;AAMnE,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1BC,YACUC,IAAgB,EAChBC,YAA0B;IAD1B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IAItB,KAAAC,QAAQ,GAAe,EAAE;EAFzB;EAIAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,mCAAmC,EAAE;MACpEC,MAAM,EAAE,IAAIb,UAAU,CAAC;QACrBc,UAAU,EAAE;UAACC,KAAK,EAAE;QAAC;OACtB;KACF,CAAC,CAACC,IAAI,CACLd,KAAK,CAAC,GAAG,CAAC,EACVC,KAAK,CAAC,CAAC,CAAC,EACRC,GAAG,CAACM,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC,EACzCT,UAAU,CAAC,IAAI,CAACgB,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACH;EAEAC,MAAMA,CAACC,OAAiB;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAW,mCAAmC,EAAED,OAAO,CAAC,CAC1EJ,IAAI,CACHZ,GAAG,CAACkB,IAAI,IAAI,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAACD,IAAI,CAAC,CAAC,CACtC;EACL;EAGQL,YAAYA,CAACO,KAAwB;IAC3C,IAAI,CAACf,YAAY,CAACgB,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOrB,UAAU,CAAC,MAAMmB,KAAK,CAACE,OAAO,CAAC;EACxC;CACD;AAlCYpB,eAAe,GAAAqB,UAAA,EAH3B5B,UAAU,CAAC;EACV6B,UAAU,EAAE;CACb,CAAC,C,EACWtB,eAAe,CAkC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}