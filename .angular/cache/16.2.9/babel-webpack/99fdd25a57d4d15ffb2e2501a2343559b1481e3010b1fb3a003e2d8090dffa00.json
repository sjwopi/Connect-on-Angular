{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n    this.products = [];\n  }\n  getAll() {\n    return this.http.get('https://fakestoreapi.com/products', {\n      params: new HttpParams({\n        fromObject: {\n          limit: 5\n        }\n      })\n    }).pipe(delay(200), retry(2), tap(products => this.products = products), catchError(this.errorHandler.bind(this)));\n  }\n  create(product) {\n    return this.http.post('https://fakestoreapi.com/products', product).pipe(tap(prod => this.products.push(prod)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n  static #_ = this.ɵfac = function ProductsService_Factory(t) {\n    return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductsService,\n    factory: ProductsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ProductsService","constructor","http","products","getAll","get","params","HttpParams","fromObject","limit","pipe","delay","retry","tap","catchError","errorHandler","bind","create","product","post","prod","push","error","errorService","handle","message","throwError","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/services/events.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\nimport {HttpClient} from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  products: IProduct[] = []\n\n  getAll(): Observable<IProduct[]> {\n    return this.http.get<IProduct[]>('https://fakestoreapi.com/products', {\n      params: new HttpParams({\n        fromObject: {limit: 5}\n      })\n    }).pipe(\n      delay(200),\n      retry(2),\n      tap(products => this.products = products),\n      catchError(this.errorHandler.bind(this))\n    )\n  }\n\n  create(product: IProduct): Observable<IProduct> {\n    return this.http.post<IProduct>('https://fakestoreapi.com/products', product)\n      .pipe(\n        tap(prod => this.products.push(prod))\n      )\n  }\n\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message)\n    return throwError(() => error.message)\n  }\n}"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAC1BC,YACUC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAId,KAAAC,QAAQ,GAAe,EAAE;EAFzB;EAIAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,mCAAmC,EAAE;MACpEC,MAAM,EAAE,IAAIC,UAAU,CAAC;QACrBC,UAAU,EAAE;UAACC,KAAK,EAAE;QAAC;OACtB;KACF,CAAC,CAACC,IAAI,CACLC,KAAK,CAAC,GAAG,CAAC,EACVC,KAAK,CAAC,CAAC,CAAC,EACRC,GAAG,CAACV,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC,EACzCW,UAAU,CAAC,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACH;EAEAC,MAAMA,CAACC,OAAiB;IACtB,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAW,mCAAmC,EAAED,OAAO,CAAC,CAC1ER,IAAI,CACHG,GAAG,CAACO,IAAI,IAAI,IAAI,CAACjB,QAAQ,CAACkB,IAAI,CAACD,IAAI,CAAC,CAAC,CACtC;EACL;EAGQL,YAAYA,CAACO,KAAwB;IAC3C,IAAI,CAACC,YAAY,CAACC,MAAM,CAACF,KAAK,CAACG,OAAO,CAAC;IACvC,OAAOC,UAAU,CAAC,MAAMJ,KAAK,CAACG,OAAO,CAAC;EACxC;EAAC,QAAAE,CAAA,G;qBAhCU3B,eAAe,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfhC,eAAe;IAAAiC,OAAA,EAAfjC,eAAe,CAAAkC,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}