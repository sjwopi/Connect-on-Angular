{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class EventsService {\n  constructor() {\n    this.events = [];\n  }\n  getAll() {\n    return this.http.get('http://localhost:3003/events', {\n      params: new HttpParams()\n    });\n  }\n  static #_ = this.ɵfac = function EventsService_Factory(t) {\n    return new (t || EventsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventsService,\n    factory: EventsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","EventsService","constructor","events","getAll","http","get","params","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/services/events.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\nimport {HttpClient, HttpParams} from '@angular/common/http'\nimport { Observable } from 'rxjs'\nimport { IEvent } from '../models/event'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  constructor(\n  ) {\n  }\n\n  events: IEvent[] = []\n\n  getAll() {\n    return this.http.get<IEvent[]>('http://localhost:3003/events', {\n      params: new HttpParams()\n    })\n  }\n\n  /* create(product: IProduct): Observable<IProduct> {\n    return this.http.post<IProduct>('http://localhost:3003/events', product)\n      .pipe(\n        tap(prod => this.events.push(prod))\n      )\n  }\n\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message)\n    return throwError(() => error.message)\n  } */\n}"],"mappings":"AACA,SAAoBA,UAAU,QAAO,sBAAsB;;AAQ3D,OAAM,MAAOC,aAAa;EACxBC,YAAA;IAIA,KAAAC,MAAM,GAAa,EAAE;EAFrB;EAIAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAW,8BAA8B,EAAE;MAC7DC,MAAM,EAAE,IAAIP,UAAU;KACvB,CAAC;EACJ;EAAC,QAAAQ,CAAA,G;qBAXUP,aAAa;EAAA;EAAA,QAAAQ,EAAA,G;WAAbR,aAAa;IAAAS,OAAA,EAAbT,aAAa,CAAAU,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}