{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ModalService {\n  constructor() {\n    this.isVisible$ = new BehaviorSubject(false);\n  }\n  open() {\n    this.isVisible$.next(true);\n  }\n  close() {\n    this.isVisible$.next(false);\n  }\n  static #_ = this.ɵfac = function ModalService_Factory(t) {\n    return new (t || ModalService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalService,\n    factory: ModalService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","ModalService","constructor","isVisible$","open","next","close","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/services/modal.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\nimport {BehaviorSubject} from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  isVisible$ = new BehaviorSubject<boolean>(false)\n\n  open() {\n    this.isVisible$.next(true)\n  }\n\n  close() {\n    this.isVisible$.next(false)\n  }\n}\n"],"mappings":"AACA,SAAQA,eAAe,QAAO,MAAM;;AAKpC,OAAM,MAAOC,YAAY;EAHzBC,YAAA;IAKE,KAAAC,UAAU,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;;EAEhDI,IAAIA,CAAA;IACF,IAAI,CAACD,UAAU,CAACE,IAAI,CAAC,IAAI,CAAC;EAC5B;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACH,UAAU,CAACE,IAAI,CAAC,KAAK,CAAC;EAC7B;EAAC,QAAAE,CAAA,G;qBAVUN,YAAY;EAAA;EAAA,QAAAO,EAAA,G;WAAZP,YAAY;IAAAQ,OAAA,EAAZR,YAAY,CAAAS,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}