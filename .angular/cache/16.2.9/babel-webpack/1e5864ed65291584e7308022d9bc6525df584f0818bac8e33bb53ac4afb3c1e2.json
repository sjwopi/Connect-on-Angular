{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { catchError, delay, retry, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./error.service\";\nexport class EventsService {\n  constructor(http, errorService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.events = [];\n  }\n  getAll() {\n    return this.http.get('http://localhost:3003/events', {\n      params: new HttpParams({\n        fromObject: {\n          limit: 5\n        }\n      })\n    }).pipe(delay(200), retry(2), tap(this.events, this.events = this.events), catchError(this.errorHandler.bind(this)));\n  }\n  create(event) {\n    return this.http.post('http://localhost:3003/events', event).pipe(tap(prod => this.products.push(prod)));\n  }\n  errorHandler(error) {\n    this.errorService.handle(error.message);\n    return throwError(() => error.message);\n  }\n  static #_ = this.ɵfac = function EventsService_Factory(t) {\n    return new (t || EventsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventsService,\n    factory: EventsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","catchError","delay","retry","tap","throwError","EventsService","constructor","http","errorService","events","getAll","get","params","fromObject","limit","pipe","errorHandler","bind","create","event","post","prod","products","push","error","handle","message","_","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","_2","factory","ɵfac","providedIn"],"sources":["/Users/ivan/Desktop/web/kursach/src/app/services/products.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core'\nimport {HttpClient, HttpErrorResponse, HttpParams} from '@angular/common/http'\nimport {catchError, delay, Observable, retry, tap, throwError} from 'rxjs'\nimport {IEvent} from '../models/event'\nimport {ErrorService} from './error.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  constructor(\n    private http: HttpClient,\n    private errorService: ErrorService\n  ) {\n  }\n\n  events: IEvent[] = []\n\n  getAll(): Observable<IEvent[]> {\n    return this.http.get<IEvent[]>('http://localhost:3003/events', {\n      params: new HttpParams({\n        fromObject: {limit: 5}\n      })\n    }).pipe(\n      delay(200),\n      retry(2),\n      tap(this.events => this.events = this.events),\n      catchError(this.errorHandler.bind(this))\n    )\n  }\n\n  create(event: IEvent): Observable<IProduct> {\n    return this.http.post<IEvent>('http://localhost:3003/events', event)\n      .pipe(\n        tap(prod => this.products.push(prod))\n      )\n  }\n\n\n  private errorHandler(error: HttpErrorResponse) {\n    this.errorService.handle(error.message)\n    return throwError(() => error.message)\n  }\n}\n"],"mappings":"AACA,SAAuCA,UAAU,QAAO,sBAAsB;AAC9E,SAAQC,UAAU,EAAEC,KAAK,EAAcC,KAAK,EAAEC,GAAG,EAAEC,UAAU,QAAO,MAAM;;;;AAO1E,OAAM,MAAOC,aAAa;EACxBC,YACUC,IAAgB,EAChBC,YAA0B;IAD1B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IAItB,KAAAC,MAAM,GAAa,EAAE;EAFrB;EAIAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,8BAA8B,EAAE;MAC7DC,MAAM,EAAE,IAAIb,UAAU,CAAC;QACrBc,UAAU,EAAE;UAACC,KAAK,EAAE;QAAC;OACtB;KACF,CAAC,CAACC,IAAI,CACLd,KAAK,CAAC,GAAG,CAAC,EACVC,KAAK,CAAC,CAAC,CAAC,EACRC,GAAG,CAAC,IAAI,CAACM,MAAM,EAAI,IAAI,CAACA,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC,EAC7CT,UAAU,CAAC,IAAI,CAACgB,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACzC;EACH;EAEAC,MAAMA,CAACC,KAAa;IAClB,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAS,8BAA8B,EAAED,KAAK,CAAC,CACjEJ,IAAI,CACHZ,GAAG,CAACkB,IAAI,IAAI,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC,CAAC,CACtC;EACL;EAGQL,YAAYA,CAACQ,KAAwB;IAC3C,IAAI,CAAChB,YAAY,CAACiB,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC;IACvC,OAAOtB,UAAU,CAAC,MAAMoB,KAAK,CAACE,OAAO,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAjCUtB,aAAa,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAb7B,aAAa;IAAA8B,OAAA,EAAb9B,aAAa,CAAA+B,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}